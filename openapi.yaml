openapi: 3.0.1
info:
  title: TODO Plugin
  description: A plugin that allows the user to manage tasks using ChatGPT.
  version: "v1"
servers:
  - url: http://localhost:5003
paths:
  /todos/{username}:
    get:
      operationId: getTodos
      summary: Get the list of todos
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getTodosResponse"
    post:
      operationId: addTodo
      summary: Add a todo to the list
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addTodoRequest"
      responses:
        "200":
          description: OK
    delete:
      operationId: deleteTodo
      summary: Delete a todo from the list
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deleteTodoRequest"
      responses:
        "200":
          description: OK
    put:
        operationId: updateTodo
        summary: Update a todo in the list
        parameters:
            - in: path
            name: username
            schema:
                type: string
            required: true
            description: The name of the user.
        requestBody:
            required: true
            content:
            application/json:
                schema:
                $ref: "#/components/schemas/addTodoRequest"
        responses:
            "200":
            description: OK
  /todos/start_timer/{username}/{todo_idx}:
    post:
      operationId: startTimer
      summary: Start the timer for a specific task
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
        - in: path
          name: todo_idx
          schema:
            type: integer
          required: true
          description: The index of the todo for which to start the timer.
      responses:
        "200":
          description: OK
  /todos/stop_timer/{username}/{todo_idx}:
    post:
      operationId: stopTimer
      summary: Stop the timer for a specific task
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: The name of the user.
        - in: path
          name: todo_idx
          schema:
            type: integer
          required: true
          description: The index of the todo for which to stop the timer.
      responses:
        "200":
          description: OK

components:
  schemas:
    getTodosResponse:
      type: object
      properties:
        todos:
          type: array
          items:
            type: object
            properties:
              task:
                type: string
                description: The task description.
              start_time:
                type: number
                format: double
                description: The start time of the timer (Unix timestamp).
              end_time:
                type: number
                format: double
                description: The end time of the timer (Unix timestamp).
              time_spent:
                type: number
                format: double
                description: The time spent on the task (in seconds).
          description: The list of todos.
    addTodoRequest:
      type: object
      required:
        - todo
      properties:
        todo:
          type: string
          description: The todo to add to the list.
          required: true
        priority:
          type: string
          description: The priority of the task.
          enum: [low, medium, high]
          default: low
    deleteTodoRequest:
      type: object
      required:
        - todo_idx
      properties:
        todo_idx:
          type: integer
          description: The index of the todo to delete.
          required: true
    updateTodoRequest:
  type: object
  required:
    - priority
  properties:
    priority:
      type: string
      description: The new priority of the task.
      enum: [low, medium, high]
      default: low

